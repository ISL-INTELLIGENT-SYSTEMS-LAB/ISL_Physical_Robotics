import rclpy
from rclpy.node import Node # Handles the creation of nodes
from std_msgs.msg import Float32
import csv
from object_class import Object

path_to_csv = '/home/ubuntu/ros2_ws/src/green_object_finder/green_object_finder/nearby_objects.csv'
turtlebot_name = 'R2TB_O1'

class DistancePub(Node):
    def __init__(self):
        super().__init__('distance_pub')
        self.pub = self.create_publisher(Float32, turtlebot_name, 10)
        self.close_objects = read_csv()
        # We will publish a message every 0.1 seconds
        timer_period = 0.1  # seconds
        # Create the timer
        self.timer = self.create_timer(timer_period, self.timer_callback)

    def timer_callback(self):
        min_distance = Float32()
        min_distance.data = float(min(self.close_objects))
        self.get_logger().info(str(min_distance.data))
        self.pub.publish(min_distance)

def read_csv():
    """This function will read the csv generated by closest_objects.py and add them to a list to be
    iterated over.

    Returns:
        list: Returns a list of objects of the object class.
    """
    new_list = []
    with open(path_to_csv, 'r') as f:
        reader = csv.reader(f)
        for lines in reader:
            if lines[3] == 'True':
                new_list.append(lines[2])
    return new_list

def main():
    rclpy.init(args=None)
    my_node = DistancePub()
    rclpy.spin(my_node)
    my_node.destroy_node()
    rclpy.shutdown()

if __name__ == "__main__":
    main()
